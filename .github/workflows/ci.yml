name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test and Coverage
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Cache Node dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install Node.js dependencies
      run: npm install
      
    - name: Run JavaScript tests
      run: npm test -- --coverage --watchAll=false
      
    - name: Run Java tests with coverage
      run: mvn clean test
      
    - name: Generate JaCoCo report
      run: mvn jacoco:report
      
    - name: Check coverage thresholds
      run: |
        echo "Java coverage report generated at: target/site/jacoco/index.html"
        echo "JavaScript coverage report generated at: coverage/lcov-report/index.html"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/site/jacoco/
          coverage/
          
    - name: Verify coverage threshold
      run: |
        # Check if coverage meets minimum requirements (allowing CI to continue even if threshold not met)
        mvn jacoco:check || echo "Coverage below 80% - see reports for details"

  build:
    runs-on: ubuntu-latest
    needs: test
    name: Build Application
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: mvn clean compile
      
    - name: Package application
      run: mvn package -DskipTests
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar